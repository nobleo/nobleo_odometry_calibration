#!/usr/bin/env python

# Copyright 2022 Nobleo Technology B.V.
#
# SPDX-License-Identifier: Apache-2.0

from math import pi
from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator, int_t, double_t, str_t, bool_t

PACKAGE = 'nobleo_odometry_calibration'

gen = ParameterGenerator()

gen.add('update_min_d', double_t, 0, 'Translational movement required before performing a filter update.', 0.2, 0, 5)
gen.add('update_min_a', double_t, 0, 'Rotational movement required before performing a filter update.', pi / 6, 0, 2 * pi)

gen.add('transform_tolerance', double_t, 0, 'Time with which to post-date the transform that is published, to indicate that this transform is valid into the future.', 0.1, 0, 2)

gen.add('odom_frame_id', str_t, 0, 'Which frame to use for odometry.', 'odom')
gen.add('base_frame_id', str_t, 0, 'Which frame to use for the robot base.', 'base_link')
gen.add('global_frame_id', str_t, 0, 'The name of the coordinate frame published by the localization system.', 'map')

group = gen.add_group('Which parameters to optimize', type='tab')
group.add('x', bool_t, 0, 'x-direction', False)
group.add('y', bool_t, 0, 'x-direction', False)
group.add('theta', bool_t, 0, 'x-direction', True)
group.add('wheel_separation_multiplier', bool_t, 0, 'x-direction', False)
group.add('wheel_radius_multiplier', bool_t, 0, 'x-direction', False)


exit(gen.generate(PACKAGE, 'node', 'Calibrator'))
